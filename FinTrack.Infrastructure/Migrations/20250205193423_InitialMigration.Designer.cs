// <auto-generated />
using System;
using FinTrack.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinTrack.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250205193423_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinTrack.Domain.Entities.AplicacaoFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AplicacoesFinanceiras");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalCreditos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalDebitos")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ControlesMensais");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensalCredito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdControleMensal")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdFontePagamento")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdControleMensal");

                    b.HasIndex("IdFontePagamento");

                    b.ToTable("ControleMensalCreditos");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensalDebito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdControleMensal")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdDebitoMensal")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdControleMensal");

                    b.HasIndex("IdDebitoMensal");

                    b.ToTable("ControleMensalDebitos");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.DebitoMensal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<bool>("Pago")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("DebitosMensais");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.FontePagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("FontesPagamento");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.HistoricoAplicacaoFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AplicacaoFinanceiraId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Credito")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Debito")
                        .HasColumnType("boolean");

                    b.Property<int>("ValorHistorico")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AplicacaoFinanceiraId");

                    b.ToTable("HistoricoAplicacoesFinanceiras");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.AplicacaoFinanceira", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.Usuario", "Usuario")
                        .WithMany("AplicacoesFinanceiras")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensal", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ControlesMensais")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensalCredito", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.ControleMensal", "ControleMensal")
                        .WithMany("ControleMensalCreditos")
                        .HasForeignKey("IdControleMensal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinTrack.Domain.Entities.FontePagamento", "FontesPagamento")
                        .WithMany("ControleMensalCreditos")
                        .HasForeignKey("IdFontePagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControleMensal");

                    b.Navigation("FontesPagamento");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensalDebito", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.ControleMensal", "ControleMensal")
                        .WithMany("ControleMensalDebitos")
                        .HasForeignKey("IdControleMensal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinTrack.Domain.Entities.DebitoMensal", "DebitosMensal")
                        .WithMany("ControleMensalDebitos")
                        .HasForeignKey("IdDebitoMensal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControleMensal");

                    b.Navigation("DebitosMensal");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.DebitoMensal", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.Usuario", "Usuario")
                        .WithMany("DebitosMensais")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.FontePagamento", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.Usuario", "Usuario")
                        .WithMany("FontesPagamento")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.HistoricoAplicacaoFinanceira", b =>
                {
                    b.HasOne("FinTrack.Domain.Entities.AplicacaoFinanceira", "AplicacaoFinanceira")
                        .WithMany("Historico")
                        .HasForeignKey("AplicacaoFinanceiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AplicacaoFinanceira");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.AplicacaoFinanceira", b =>
                {
                    b.Navigation("Historico");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.ControleMensal", b =>
                {
                    b.Navigation("ControleMensalCreditos");

                    b.Navigation("ControleMensalDebitos");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.DebitoMensal", b =>
                {
                    b.Navigation("ControleMensalDebitos");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.FontePagamento", b =>
                {
                    b.Navigation("ControleMensalCreditos");
                });

            modelBuilder.Entity("FinTrack.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("AplicacoesFinanceiras");

                    b.Navigation("ControlesMensais");

                    b.Navigation("DebitosMensais");

                    b.Navigation("FontesPagamento");
                });
#pragma warning restore 612, 618
        }
    }
}
